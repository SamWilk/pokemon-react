name: Continuous Integration

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
      - "development-branch"
  workflow_dispatch:

jobs:
  confirm-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v1
        with:
          node-version: 18
      - run: |
          npm ci
          npm run build

  build-docker-image-ui:
    runs-on: ubuntu-latest
    needs: confirm-build

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pokemon-react-ui:latest

  build-docker-image-server:
    runs-on: ubuntu-latest
    needs: confirm-build

    steps:
      - name: Creating .env file
        run: |
          echo "${{ secrets.PROD_ENV }}" >> ./api/.env
          
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pokemon-react-server:latest
          context: ./api

  deploy-k8s-prod:
    runs-on: ubuntu-latest
    needs: [build-docker-image-server, build-docker-image-ui]
    steps:
      - name: Configure kubectl
        uses: Azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy k8s yaml
        id: deploy-k8s-yaml
        run: |
          kubectl -n pokemon-react rollout restart deployment
